name: jenn-ci
run-name: ${{ github.actor }}-jenn-ci

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  
on:
  push: 
    branches: 
      - "*"
  pull_request:
    branches: [ master ]


jobs:
  # qa:
  #   uses: ./.github/workflows/.github-ci-qa.yml
  test:
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Create base environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: false
          activate-environment: explicit-env
          environment-file: deploy/specs/base.yml
      - name: ‚¨áÔ∏è Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./build
      - name: Environments 
        shell: bash -el {0}
        run: | 
          doit env
      - name: Linting
        shell: bash -el {0}
        run: | 
          doit lint 
      - name: Installation 
        shell: bash -el {0}
        run: | 
          doit install
      - name: Unit Testing
        shell: bash -el {0}
        run: | 
          doit test
      - name: ‚¨ÜÔ∏è Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./build
  build:  
    needs: test
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Create base environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: false
          activate-environment: explicit-env
          environment-file: deploy/specs/base.yml 
      - name: ‚¨áÔ∏è Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./build
      - name: üß± Distribution
        shell: bash -el {0}
        run: | 
          doit build
      - name: üìö Documentation  
        shell: bash -el {0}
        run: | 
          doit docs
      - name: ‚¨ÜÔ∏è Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./build
          overwrite: true
  deploy:  
    needs: build 
    runs-on: ubuntu-latest
    steps: 
      - name: Stage distribution for release 
        # GitHub Actions needs dist/ to be at root level
        shell: bash -el {0}
        run: | 
          mv ./build/dist .
      - name: üì¶ Ship package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          skip-existing: true
          repository-url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN }}
      - name: ‚¨ÜÔ∏è Upload documentation to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './build/docs/html'
      - name: üì∞ Publish Docs to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
